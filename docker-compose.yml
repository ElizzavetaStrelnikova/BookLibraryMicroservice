services:
  postgres:
    image: postgres:14  
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: book_library
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:6
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka_data:/var/lib/kafka/data

  api-gateway:
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      - book-service
      - reservation-service
    environment:
      - Jwt__Key=your_super_secret_key_here
      - Services__BookService=http://book-service:80

  book-service:
    build:
      context: .
      dockerfile: BookService/Dockerfile
    ports:
      - "5001:80"
    depends_on:
      - postgres
      - redis
    environment:
      - ConnectionStrings__Postgres=Host=postgres;Database=book_library;Username=postgres;Password=postgres
      - Redis__ConnectionString=redis

  reservation-service:
    build:
      context: .
      dockerfile: ReservationService/Dockerfile
    ports:
      - "5002:80"
    depends_on:
      - mongodb
      - kafka
    environment:
      - Kafka__BootstrapServers=kafka:9092
      - MongoDB__ConnectionString=mongodb://admin:admin@mongodb:27017

  notification-service:
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    depends_on:
      - kafka
    environment:
      - Kafka__BootstrapServers=kafka:9092
      - SendGrid__ApiKey=your_sendgrid_key
volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  kafka_data: